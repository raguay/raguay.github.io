<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Custom Computer Tools</title>
    <link>http://customct.com/</link>
    <description>Recent content on Custom Computer Tools</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 May 2019 15:37:43 +0700</lastBuildDate>
    
	<atom:link href="http://customct.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My First Post Using Hugo</title>
      <link>http://customct.com/posts/my-first-post/</link>
      <pubDate>Thu, 09 May 2019 15:34:59 +0700</pubDate>
      
      <guid>http://customct.com/posts/my-first-post/</guid>
      <description>This is my first post on the Hugo site. Trying to figure it all out. So far, it has a blog section and my projects sections. I am planning to maintain and expand this site more often.
Keep checking us out!</description>
    </item>
    
    <item>
      <title>eLisp Extensions</title>
      <link>http://customct.com/projects/elisp/</link>
      <pubDate>Mon, 31 Dec 2018 08:14:45 +0000</pubDate>
      
      <guid>http://customct.com/projects/elisp/</guid>
      <description>I&amp;rsquo;m back to using Emacs and eLisp again. I haven&amp;rsquo;t done much with it since my college days in the `80s. Here are some items I&amp;rsquo;ve been working on:
Teacode Expand This elisp package defines the command teacode-expand which can be assigned to a hotkey using this:
(global-set-key (kbd &amp;quot;C-A-e&amp;quot;) &#39;teacode-expand)  Once assigned, pressing the hotkey will take the current line, pass it and the extension of the file associated to the buffer, and send it to the TeaCode.</description>
    </item>
    
    <item>
      <title>Alfred and Hazel Running Slower</title>
      <link>http://customct.com/posts/alfred-running-slower/</link>
      <pubDate>Wed, 12 Dec 2018 12:08:05 +0700</pubDate>
      
      <guid>http://customct.com/posts/alfred-running-slower/</guid>
      <description>I love zsh and ohmyzsh for my command line. It looks great and is very flexible. But, I recently added zplug as well with several great plugins. I would recommend using it. But, you might want to watch out for the &amp;ldquo;gotcha&amp;rdquo; that I ran into.
The zplug command runs several checks and loads several scripts each time you load a zsh instance. This does increase the startup time, but I figured that wasn&amp;rsquo;t much of an issue since I load several instances when I boot the system.</description>
    </item>
    
    <item>
      <title>My New Helper - Station</title>
      <link>http://customct.com/posts/my-new-helper-station/</link>
      <pubDate>Sun, 02 Dec 2018 12:08:05 +0700</pubDate>
      
      <guid>http://customct.com/posts/my-new-helper-station/</guid>
      <description>It is hard keeping up with all the tabs in Chrome or FireFox. On an average day, I&amp;rsquo;ll have anywhere from 10 to 30 tabs open at once. Not only is it hard to find the right tab, but my system starts to slow down and sputter with the high memory usage. Therefore, I open and close many tabs to a particular website over and over.
But, I just recently found a new friend that helps with this problem.</description>
    </item>
    
    <item>
      <title>BitBar Scripts</title>
      <link>http://customct.com/projects/bitbar/</link>
      <pubDate>Thu, 15 Nov 2018 18:32:06 +0000</pubDate>
      
      <guid>http://customct.com/projects/bitbar/</guid>
      <description>BitBar is a great program for putting custom icons in the macOS menubar. Check out my tutorial on BitBar.
Current Files Plugin This plugin allows you to quickly edit commonly edited files using a selected editor. This plugin works with the BitBar Alfred workflow, but is usable by itself. This plugin requires three files in your home directory:
 .myCurrentFiles  A list of all files that you want to appear in the menu.</description>
    </item>
    
    <item>
      <title>fman Extensions</title>
      <link>http://customct.com/projects/fman/</link>
      <pubDate>Thu, 15 Nov 2018 18:10:50 +0000</pubDate>
      
      <guid>http://customct.com/projects/fman/</guid>
      <description>fman is a flexible, extensible file manager for macOS, Linux, and Windows. You can extend fman&amp;rsquo;s functionality by writing exensions in Python 3. I wrote a tutorial on writing extensions for fman on TutsPlus.
I have been creating many entensions for fman. Each extension below has a link to the GitHub repository for the extension. To install an extension, in fman press the command prompt key (&amp;lt;shift&amp;gt;+&amp;lt;cmd&amp;gt;+p), type install plugin, and press the &amp;lt;enter&amp;gt; key.</description>
    </item>
    
    <item>
      <title>LaunchBar Actions</title>
      <link>http://customct.com/projects/launchbar/</link>
      <pubDate>Thu, 15 Nov 2018 18:00:57 +0000</pubDate>
      
      <guid>http://customct.com/projects/launchbar/</guid>
      <description>LaunchBar 6 is an application similar to Alfred. Since I love making scripts and extensions, I naturally started making some for LaunchBar as well. I also had many requests for porting some of my Alfred workflows to LaunchBar. Therefore, this is the results. If you have a particular need, let me know.
You can find all of these actions on my GitHub account.
Evaluate JavaScript This handy action is a good way to test JavaScript; especially, LaunchBar specific JavaScript.</description>
    </item>
    
    <item>
      <title>FoldingText Extensions</title>
      <link>http://customct.com/projects/foldingtext/</link>
      <pubDate>Thu, 15 Nov 2018 17:53:27 +0000</pubDate>
      
      <guid>http://customct.com/projects/foldingtext/</guid>
      <description>FoldingText has become my Markdown editor of choise. I use it along side of Marked 2. I use my FoldingText Alfred workflow to control things. While working with FoldingText, I have created some extensions as well. Give them a try and let me know what you think! If you have ideas you would like to see in FoldingText, let me know and maybe I will write it. I love extending applications.</description>
    </item>
    
    <item>
      <title>PopClip Extensions</title>
      <link>http://customct.com/projects/popclip/</link>
      <pubDate>Thu, 15 Nov 2018 17:44:31 +0000</pubDate>
      
      <guid>http://customct.com/projects/popclip/</guid>
      <description>Popclip is a pop-up menu for your cursor. It is context sensitive and easy to expand with extensions. If you are good at programming, you can make your own extensions out of PHP, shell scripts, Ruby, or any language you want to use.
As I write new extensions, I will add them to the list below.
Extensions    Name Description     surround.popclipext This extensions will surround the current selection depending on the key pressed at the same time.</description>
    </item>
    
    <item>
      <title>TextSoap Cleaners</title>
      <link>http://customct.com/projects/textsoap/</link>
      <pubDate>Thu, 15 Nov 2018 17:38:04 +0000</pubDate>
      
      <guid>http://customct.com/projects/textsoap/</guid>
      <description>If you process a lot of text, you know the value of programs that will make that job easier. I used to use Awk for those text cleanup jobs, but now I have found a better friend: Textsoap! Creating and sharing Textsoap cleaners is easy and fun.
As I write new cleaners, I will add them to the list below. You can use them as they are or modify them as you need.</description>
    </item>
    
    <item>
      <title>Dropzone Actions</title>
      <link>http://customct.com/projects/dropzone/</link>
      <pubDate>Thu, 15 Nov 2018 17:26:52 +0000</pubDate>
      
      <guid>http://customct.com/projects/dropzone/</guid>
      <description>I have really enjoyed the Dropzone program for the Mac. It is a platform of utilities for processing files and text. If there is not an action you need already, then just create it yourself! Each action is a directory with a Ruby or Python file, configuration file, and an icon file with the extension &amp;ldquo;.dropzone&amp;rdquo;. You can view alternate actions here or fork Dropzone&amp;rsquo;s GitHub account, add your action, and give a pull request.</description>
    </item>
    
    <item>
      <title>WordPress Web API</title>
      <link>http://customct.com/projects/wpwebapi/</link>
      <pubDate>Thu, 15 Nov 2018 17:23:23 +0000</pubDate>
      
      <guid>http://customct.com/projects/wpwebapi/</guid>
      <description>Web API Many times when a site powered by WordPress wants to supply a Web API for their site, they will work outside of WordPress using either PHP or Ruby on Rails. Then they have to write their own functions to get to the information inside the database for their WordPress site. I always thought that was a little backwards. That is why I wrote the Web API plugin for WordPress.</description>
    </item>
    
    <item>
      <title>WordPress Script Manager</title>
      <link>http://customct.com/projects/scriptmanager/</link>
      <pubDate>Thu, 15 Nov 2018 14:53:33 +0000</pubDate>
      
      <guid>http://customct.com/projects/scriptmanager/</guid>
      <description>Script Manager The Script Manager plugin for WordPress allows the administrator to insert HTML, CSS, PHP, LESS, SQL tables, and/or JavaScript into any post, page, or even into the widget areas. The scripts are kept in the database. Therefore, you never have to worry about updates to WordPress, plugins, or to your theme accidentally deleting your code.
Scripts can be attached to any of the WordPress Actions or Filters, whether made by WordPress core or by a plugin.</description>
    </item>
    
    <item>
      <title>All Projects Moved</title>
      <link>http://customct.com/posts/allprojectsmoved/</link>
      <pubDate>Thu, 15 Nov 2018 19:36:12 +0700</pubDate>
      
      <guid>http://customct.com/posts/allprojectsmoved/</guid>
      <description>Well, all the project pages have been moved over to this new site. Now, I need time to add to it as not all of my projects are currently listed.
I&amp;rsquo;m not sure about moving over my tutorials as they were never overly popular. But, I most likely will move over the ones that I personally like. If there is one you would like to make sure is moved over, just let me know.</description>
    </item>
    
    <item>
      <title>Favorite Tools</title>
      <link>http://customct.com/favtools/</link>
      <pubDate>Mon, 12 Nov 2018 20:20:16 +0000</pubDate>
      
      <guid>http://customct.com/favtools/</guid>
      <description>Favorite Software Tools Since my site is about software tools for your computer, I thought I would share what tools I find useful and fun. Every tool on this page are tools that I use on a regular basis. Some are free, some are not. But, all of them are extremely useful tools. They are not listed in any particular order. I will be adding on to this list, so check by often!</description>
    </item>
    
    <item>
      <title>Text Case Converter in Swift</title>
      <link>http://customct.com/projects/alfredp/alfredtextcaseconvswift/</link>
      <pubDate>Mon, 12 Nov 2018 19:10:57 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredtextcaseconvswift/</guid>
      <description>This workflow is a replication of my &amp;ldquo;tm:case&amp;rdquo; command of the Text Massager Workflow done in Swift. You have to have xCode 6 beta 6 to recompile the executable, but it should run on any system that is OS Maverick and up. Instructions for recompiling the Alfred Swift Library and the program is in the workflow directory. The one command is &amp;ldquo;tc:convert&amp;rdquo;. The string given will be shown in capital case, upper case, lower case, and title case.</description>
    </item>
    
    <item>
      <title>Zip Info Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredzipinfo/</link>
      <pubDate>Mon, 12 Nov 2018 19:09:25 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredzipinfo/</guid>
      <description>This workflow has one command: zi:view. This will show you the zip files in your home directory&amp;rsquo;s Documents folder. When you select one, it will open a Python window showing the contents of the zip file.</description>
    </item>
    
    <item>
      <title>Title Case Server Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredtitlecase/</link>
      <pubDate>Mon, 12 Nov 2018 19:04:42 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredtitlecase/</guid>
      <description>This workflow goes with an upcoming tutorial on using golang with Alfred on tutplus.com. It currently runs a small web app for doing title case conversions. The workflow has these commands:
   Command Description     tcs:launch This will start the title case server on port 9910   tcs:stop This will stop the title case server   tcs:convert This will take a string on the Alfred prompt, send it to the title case server, and return the result in a notification and the clipboard.</description>
    </item>
    
    <item>
      <title>Open in Alfred</title>
      <link>http://customct.com/projects/alfredp/alfredopen/</link>
      <pubDate>Mon, 12 Nov 2018 19:02:36 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredopen/</guid>
      <description>This workflow allows you to open a Terminal window or iTerm windows directory in Alfred.
You type &amp;ldquo;oa:install&amp;rdquo; to install a helper script into your /usr/local/bin directory. Make sure that directory exists, is writable by you, and in your path.
Then you can use these commands:
   Command Description     oa:terminal open the topmost terminal window in Alfred   oa:iterm open the topmost iterm window in Alfred    </description>
    </item>
    
    <item>
      <title>Powerline Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredpowerline/</link>
      <pubDate>Mon, 12 Nov 2018 19:01:20 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredpowerline/</guid>
      <description>This is a toolbox of functions for working with Powerline. Currently, the commands are:
   Command Description     pl:loc Gives the location of the pip installation of Powerline. It will open it in Alfred, in Finder if the ctrl key is pressed, or in Terminal if the cmd key is pressed.   pl:doc Will open the documentation for Powerline.   pl:fonts Will open the fonts download page for Powerline.</description>
    </item>
    
    <item>
      <title>Instant Search Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredinstantsearch/</link>
      <pubDate>Mon, 12 Nov 2018 18:59:55 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredinstantsearch/</guid>
      <description>This workflow is the translation of Brett Terpstra&amp;rsquo;s LaunchBar script for Alfred. You have to have his Instant Search Service installed. For more information, go to SearchLink - BrettTerpstra.com.</description>
    </item>
    
    <item>
      <title>Fish Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredfish/</link>
      <pubDate>Mon, 12 Nov 2018 18:58:32 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredfish/</guid>
      <description>This is a toolbox of functions for working with the Fish Shell. You can install fish shell with homebrew:
brew install fish  Currently, the functions are:
   Command Description     f:seteditor Set the code editor to use   f:editfunction Edit a Fish function. It will show a list of possible functions to edit. If you press FN key and select a function, that function will be deleted.</description>
    </item>
    
    <item>
      <title>DwellClick Workflow</title>
      <link>http://customct.com/projects/alfredp/alfreddwellclick/</link>
      <pubDate>Mon, 12 Nov 2018 18:51:46 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfreddwellclick/</guid>
      <description>This workflow has commands for DwellClick from Pilotmoon. You can:
   Command Description     dc:enable Enable DwellClick   dc:disable Disable DwellClick   dc:action Performs the action selected. This is a script filter that will list all possible actions. If the command key is pressed, it delays the action for the next dwell click. If the function key is pressed, then the action is sted for use with the first hotkey action.</description>
    </item>
    
    <item>
      <title>Scratch Pad Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredscratchpad/</link>
      <pubDate>Mon, 12 Nov 2018 18:50:01 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredscratchpad/</guid>
      <description>Sometimes you just need a place to edit some text quickly. Or, simply write a short note to store in the clipboard history (it actually works better than you think). That is where this workflow comes in handy.
After you set a hotkey, you can select text and edit it on the Alfred command line. When you press enter, it will be placed into the clipboard. If you press  and enter, it will place it into the clipboard and the top most application.</description>
    </item>
    
    <item>
      <title>Sermon Scheduler Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredsermon/</link>
      <pubDate>Mon, 12 Nov 2018 18:48:47 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredsermon/</guid>
      <description>This workflow aid in the creating of my sermon schedules. Use ss:setdirectory to set the directory for sermons (or whatever you want to create schedules from a template). The use ss:seteditor to set the editor you want to use (I use Sublime). You then can use ss:create to make a new schedule by the template (you might want to edit the template first with the ss:edit and selecting the template). Then use ss:edit to edit one of the schedules or the template.</description>
    </item>
    
    <item>
      <title>Chrome Accessibility</title>
      <link>http://customct.com/projects/alfredp/alfredchromeaccess/</link>
      <pubDate>Mon, 12 Nov 2018 18:46:49 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredchromeaccess/</guid>
      <description>This workflow allows you to launch Chrome with the accessibility flag set so that you can use ShortCat.app with Chrome. It uses ctl-shift-h to launch Chrome or bring it to the front if running. ctl-shift-alt-h to quit Chrome.</description>
    </item>
    
    <item>
      <title>OctoPow Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredoctopow/</link>
      <pubDate>Mon, 12 Nov 2018 18:06:15 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredoctopow/</guid>
      <description>This workflow assumes you have octopuses and pow installed on your computer with each octopress site linked into the ~/.pow directory. The POW workflow is a great compliment to this workflow and is called by the preview function. First, set up your editor with &amp;ldquo;octopow:editor&amp;rdquo;. Then, set you current POW project with &amp;ldquo;octopow&amp;rdquo;. You can create/edit/delete posts with &amp;ldquo;octopow:post&amp;rdquo;. You can generate your site and preview it in POW using &amp;ldquo;octopow:preview&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Alfred Bible</title>
      <link>http://customct.com/projects/alfredp/alfredbible/</link>
      <pubDate>Mon, 12 Nov 2018 18:04:58 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredbible/</guid>
      <description>This workflow will request Bible passages from the &amp;ldquo;Ephesians 4:14&amp;rdquo; website: http://www.4-14.org.uk/xml-bible-web-service-api. Access to this API is currently free. This workflow will request the given verse from Alfred edit line or from the current OS X selection, request the verse(s), and return it in the clipboard and a notification. You can then paste it where ever you want. If you use the hotkey to search for the selected verse, it will automatically replace it with the text.</description>
    </item>
    
    <item>
      <title>FoldingText Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredfoldingtext/</link>
      <pubDate>Mon, 12 Nov 2018 18:03:30 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredfoldingtext/</guid>
      <description>This workflow is for working with todo lists using TaskPaper or FoldingText. But, you can set any other editor you want as well. Since TaskPaper uses plain text files for everything, it is easy to write scripts to add functionality that the program does not have. So far, I have the following keywords defined:
   Command Description     t:settodo This command allows you to set the directory for your todos.</description>
    </item>
    
    <item>
      <title>Notes Workflow</title>
      <link>http://customct.com/projects/alfredp/alfrednotes/</link>
      <pubDate>Mon, 12 Nov 2018 17:56:11 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfrednotes/</guid>
      <description>This workflow if for taking notes. It was designed for Calca, but can be used with any editor. So far, I have the following keywords:
   Command Description     n:setnotes This allows for the setting for the location of your notes directory. It is a directory select. Therefore, the directory has to already exist.   n:notes This will list every file in the notes directory that ends in &amp;ldquo;.</description>
    </item>
    
    <item>
      <title>Budget Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredbudget/</link>
      <pubDate>Mon, 12 Nov 2018 17:54:32 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredbudget/</guid>
      <description>This workflow is for keeping track of budgets Calca.app. You can set a budget template (&amp;ldquo;b:budget&amp;rdquo; keyword and selecting &amp;ldquo;Edit Template&amp;rdquo;), and then create budgets each month (&amp;ldquo;b:budget&amp;rdquo; keyword and selecting &amp;ldquo;Make from Template&amp;rdquo;). The &amp;ldquo;b:budget&amp;rdquo; keyword will also show all of the available budget files that you can view and/or edit.</description>
    </item>
    
    <item>
      <title>s3cmd Workflow</title>
      <link>http://customct.com/projects/alfredp/alfreds3cmd/</link>
      <pubDate>Mon, 12 Nov 2018 17:45:03 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfreds3cmd/</guid>
      <description>This workflow gives the ability to upload files to Amazon S3 using the s3cmd commandline function. You can download the s3cmd utility at http://s3tools.org/s3cmd. The workflow currently contains a copy of the s3cmd tool. You will need to open a terminal to the directory that contains the workflow to set your s3 credentials. Please see the directions at http://s3tools.org/s3cmd to know how to set it up. Here are the currently supported keywords and file actions:</description>
    </item>
    
    <item>
      <title>Expandrive Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredexpandrive/</link>
      <pubDate>Mon, 12 Nov 2018 17:41:01 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredexpandrive/</guid>
      <description>This workflow gives some added features for ExpanDrive. You can use the hotkey &amp;ldquo;e&amp;rdquo; to change the current selection in Finder or Path Finder that is in a subdirectory for a ExpanDrive drive to a web facing reference to that file. You set up the ExpanDrive name using the &amp;ldquo;ed:edir&amp;rdquo; keyword. You then can set the web facing directory prefix with &amp;ldquo;ed:wdir&amp;rdquo;. The scripts currently do not check for accuracy, that is up to the user.</description>
    </item>
    
    <item>
      <title>Textsoap Cleaners Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredtextsoap/</link>
      <pubDate>Mon, 12 Nov 2018 17:38:47 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredtextsoap/</guid>
      <description>This workflow interfaces with TextSoap, a great text processing program. I now use it more than awk! The following are the keywords defined:
   Command Description     tc:clean This keyword will present a list of all previously used cleaners to pick from. Start typing to narrow down the list. When you hit enter on an entry, it will perform that cleaner on the clipboard. If you hold down the fn key, it will delete that cleaner from the list of preferred cleaners.</description>
    </item>
    
    <item>
      <title>Text Massagers Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredtextmassagers/</link>
      <pubDate>Mon, 12 Nov 2018 16:54:11 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredtextmassagers/</guid>
      <description>Text Massagers I am often changing text around to different formats in large quantities. So, I made a workflow for keeping all of them. I call it text massagers because you are &amp;ldquo;massaging&amp;rdquo; the text with the script. You can use this as your template for your own massagers. All of these scripts takes the item from the clipboard, massages it, and places back into the clipboard while showing you the results.</description>
    </item>
    
    <item>
      <title>Next Item Workflow</title>
      <link>http://customct.com/projects/alfredp/alfrednextitem/</link>
      <pubDate>Mon, 12 Nov 2018 16:46:48 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfrednextitem/</guid>
      <description>This little workflow allows you to sequentially step through items in multiple list files. You use the &amp;ldquo;Next Item: Set File&amp;rdquo; file action on the file containing a list of items: One item per line. For example, a list of urls; one per line. Then the hot key will take the next item from the specified first list and copy it to the clipboard and to a notification. If you view all lists before the first list, you will see each corresponding item for each list.</description>
    </item>
    
    <item>
      <title>Compress Image Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredcompressimage/</link>
      <pubDate>Mon, 12 Nov 2018 16:45:07 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredcompressimage/</guid>
      <description>This workflow is for compressing png images to a smaller size with scaling. You have to edit the script to your image size you want to scale. Type &amp;ldquo;ci&amp;rdquo; and then a name of the image file. A list of images will be shown for you to select the one you want to compress. When using Alfred to browse files, if you view a directory, the compress image command will show in the right arrow menu listing.</description>
    </item>
    
    <item>
      <title>Video Time Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredvideotime/</link>
      <pubDate>Mon, 12 Nov 2018 16:20:29 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredvideotime/</guid>
      <description>This workflow is used to find the duration of a video. You can use the &amp;lsquo;getvideotime&amp;rsquo; keyword to search for a particular video to get the duration. The &amp;lsquo;getvideodir&amp;rsquo; keyword is used to scan a full directory. Both are also file actions in the Alfred browser.</description>
    </item>
    
    <item>
      <title>Name Sequencer Workflow</title>
      <link>http://customct.com/projects/alfredp/alfrednamesequencer/</link>
      <pubDate>Mon, 12 Nov 2018 16:14:35 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfrednamesequencer/</guid>
      <description>This workflow allows you to sequence through some file names. You set the base name and extension. It will increment the count and place it in the clipboard and Growl it. If there is a file name in the clipboard, you can also just increment the count for the file name.
   Command Description     setname This will set the base name for creating filenames.   setext This will set the extension for the filenames created.</description>
    </item>
    
    <item>
      <title>Alfred Timekeeper Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredtimekeeper/</link>
      <pubDate>Mon, 12 Nov 2018 15:37:23 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredtimekeeper/</guid>
      <description>A time tracking extension that allows for any number of projects and tracking the time between them. Still early stage, but very useable. It also has a basic graphical viewing of work hours with a calendar for lookup. I have started recreating some of the PHP scripts as full go language programs. Please let me know if you have any problems. The following keywords are used:
   Command Description     atk:addproject This allows you to create a new project   atk:project This allows you to set the current project   atk:state This allows you to set the current state of a project.</description>
    </item>
    
    <item>
      <title>Alfred URI Handler</title>
      <link>http://customct.com/projects/alfredp/alfreduri/</link>
      <pubDate>Mon, 12 Nov 2018 15:35:19 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfreduri/</guid>
      <description>This workflow has one command &amp;ldquo;au:install&amp;rdquo;. Once you run it, a URI handler for Alfred will be installed. This is used to trigger external triggers in any workflow. The format is:
alfreduri://com.apple.AppleScript.AlfredURIhandler?wf=&amp;lt;workflow Bundle ID&amp;gt;&amp;amp;arg=&amp;lt;arguments&amp;gt;&amp;amp;ext=&amp;lt;external trigger name&amp;gt;
The arguments should be URI encoded (ie: no spaces, but %20 instead). If you update the workflow, you have to re-apply the handler. Also, do not delete the workflow or the functionality will be removed.</description>
    </item>
    
    <item>
      <title>Dropzone 3 Workflow</title>
      <link>http://customct.com/projects/alfredp/alfreddropzone3/</link>
      <pubDate>Mon, 12 Nov 2018 15:32:34 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfreddropzone3/</guid>
      <description>This workflow is for easily getting to the Dropzone 3 actions directory in Alfred. Use the keyword dz:browse to open the directory in Alfred Browser or hold the CMD key to show in Finder.</description>
    </item>
    
    <item>
      <title>Alfred Browser</title>
      <link>http://customct.com/projects/alfredp/alfredbrowser/</link>
      <pubDate>Mon, 12 Nov 2018 15:30:43 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredbrowser/</guid>
      <description>The only keyword is ff for &amp;ldquo;Find a Folder&amp;rdquo;. It is a way to lookup a folding in the Alfred browser or in Finder. Very handy.
There are two Alfred browser actions:
Create a File
Simply creates a file in the directory this file action is ran on. It will ask you for the name and then create it.
Create a Directory
Same as &amp;ldquo;Create a File&amp;rdquo;, but creates a directory instead.</description>
    </item>
    
    <item>
      <title>Copy/Move To Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredcopymove/</link>
      <pubDate>Mon, 12 Nov 2018 15:29:06 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredcopymove/</guid>
      <description>This workflow starts with a Add Directory to Copy/Move locations&amp;hellip; File Action to create a list of directories to use as targets for a copy/move operation. If actioned on a file, the directory of the file is saved.
Once you have a list, you can use copy to&amp;hellip; or move to&amp;hellip; file actions to move or copy files to a previously saved directory.
The keyword cm:fav is used to view saved directories, remove one, go to one in Alfred Browser, or open in Finder.</description>
    </item>
    
    <item>
      <title>Slap Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredslap/</link>
      <pubDate>Mon, 12 Nov 2018 15:27:28 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredslap/</guid>
      <description>These commands are for working with the slap terminal editor easier. You can learn more about slap at https://github.com/slap-editor/slap
slap:edit Gets the file in Finder or Pathfinder and opens it in iTerm using slap.
slap:install Runs the npm install for slap. It is assumed that node and npm are already installed. The best way to install node is with HomeBrew (http://brew.io).
A hotKey is setup to take the current OS X selection and open it in slap.</description>
    </item>
    
    <item>
      <title>MacVim Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredmacvim/</link>
      <pubDate>Mon, 12 Nov 2018 15:24:16 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredmacvim/</guid>
      <description>This workflow adds commands for working with MacVim. The commands are:
vim:editterminal Edit the selected file from Finder or PathFinder in a terminal MavVim.
vim:editgui Edit the selected file from Finder or PathFinder in a gui MacVim
It also has commands for the Alfred Browser to edit with MacVim in terminal or gui. There are hotkey you can define as well.</description>
    </item>
    
    <item>
      <title>Peppermint Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredpeppermint/</link>
      <pubDate>Mon, 12 Nov 2018 15:20:06 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredpeppermint/</guid>
      <description>This workflow is for using the Peppermint code editor. You can learn more about Peppermint at http://osxpeppermint.com/.
The commands are:
p:edit Gets the file in Finder or Pathfinder and opens it in Peppermint editor.
HotKey is setup to take the current OS X selection and open it in slap. There are also Alfred browser commands and an external trigger defined for it.</description>
    </item>
    
    <item>
      <title>NW.js Workflow</title>
      <link>http://customct.com/projects/alfredp/alfrednwjs/</link>
      <pubDate>Mon, 12 Nov 2018 15:07:47 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfrednwjs/</guid>
      <description>NW.js is an application for developing applications using web technologies. You can create an application with HTML, CSS, and JavaScript using any io.js (formerly node.js) library. There has been a move to this new version due to the node.js project in a stalemate and far behind in development compared to what Chrome is using.
Once you have your application developed, you can zip it up with a config.json file.
The workflow provides the following commands:</description>
    </item>
    
    <item>
      <title>Alfred Editor</title>
      <link>http://customct.com/projects/alfredp/alfrededitor/</link>
      <pubDate>Mon, 12 Nov 2018 15:05:40 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfrededitor/</guid>
      <description>This is a simple editor that makes use of Node Webkit Toolbox to run. Therefore, you need to install that workflow first. After installing this workflow, you need to execute ae:install to install the data files and the help files into their proper location. You will have a command line program called ae you can use to open files from the command line.
The following commands are then useable:
ae:openeditor</description>
    </item>
    
    <item>
      <title>Hammerspoon Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredhammerspoon/</link>
      <pubDate>Mon, 12 Nov 2018 14:52:10 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredhammerspoon/</guid>
      <description>This is a direct port of my Mjolnir Workflow.
This workflow is for running scripts using Hammerspoon to control your windows. This is just a sample of the things that can be done. Follow this layout and you can do many neat things with Hammerspoon.
First off, download Hammerspoon from https://github.com/Hammerspoon/hammerspoon/releases/latest. Once installed, reload Hammerspoon and run the &amp;ldquo;hs:install&amp;rdquo; to set the configuration file this workflow expects. After that, everything should just work.</description>
    </item>
    
    <item>
      <title>Textwell Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredtextwell/</link>
      <pubDate>Mon, 12 Nov 2018 14:48:40 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredtextwell/</guid>
      <description>This workflow is for working with the Textwell program for the Mac. It currently give a command for opening it quickly, tw:front. It also has:
tw:edit This copies the selected text and pastes it into TextWell. It also saves the name of the application that the text was copied from.
tw:paste This copies what is in TextWell and pastes it back into the application that the text was copied from.</description>
    </item>
    
    <item>
      <title>Markdown to Presentation Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredmarkdownpresentation/</link>
      <pubDate>Mon, 12 Nov 2018 14:44:18 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredmarkdownpresentation/</guid>
      <description>This workflow assumes that the kramdown ruby package is installed on the system already. To install, simply type in a command line:
gem install kramdown  Some system might require a sudo for this command. If you get an error message, try:
sudo gem install kramdown  This has a single file action that takes the given markdown file and converts it to a slide show in HTML and CSS.</description>
    </item>
    
    <item>
      <title>Timestamp Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredtimestamp/</link>
      <pubDate>Mon, 12 Nov 2018 14:41:41 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredtimestamp/</guid>
      <description>This workflow is a demonstration on how to make a custom time stamp expander.
ts:stamp This causes the current time to be made into a time stamp in the format given. It then copies to clipboard.
This command is also trailerable with a hotkey.</description>
    </item>
    
    <item>
      <title>Anybar Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredanybar/</link>
      <pubDate>Mon, 12 Nov 2018 14:39:35 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredanybar/</guid>
      <description>This workflow requires the anybar application to be install. The easiest way to install is by home-brew cask:
brew cask install anybar
If you do not have home-brew cask installed, follow the instructions here: HomeBrew Cask. If you do not have HomeBrew installed, follow the instructions here: HomeBrew. Then execute the above line.
Once installed, you can use the features of this workflow:
anybar:launch Launches anybar with optional port number.</description>
    </item>
    
    <item>
      <title>Picate Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredpicate/</link>
      <pubDate>Mon, 12 Nov 2018 13:52:17 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredpicate/</guid>
      <description>This workflow is for programing using the Picat language. The following commands are available:
pic:install This will download and install Picat in to the ~/Documents directory. It then sets up the variables to use in all the other commands.
pic:showdir This shows the directory of the install Picat program to the user.
pic:setscript This sets the Picat script to execute in the other commands.
pic:editscript This opens the Picat script in to the code editor that is setup with pic:seteditor.</description>
    </item>
    
    <item>
      <title>Haskel Text Converter Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredhaskeltextconv/</link>
      <pubDate>Mon, 12 Nov 2018 13:48:45 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredhaskeltextconv/</guid>
      <description>This workflow demonstrates the Haskell Alfred Library. The workflow allows text to be converted to different formats. The following commands are:
ht:conv
This command takes a string in the Alfred Prompt. You then pick the type of conversion you want. The result is pushed on to the clipboard.
ht:start
This command starts a dedicated web server for performing the text conversion.
ht:stop
This command closes the dedicated web server.
There is a hotkey for numbering the lines of text in the clipboard.</description>
    </item>
    
    <item>
      <title>Template Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredtemplate/</link>
      <pubDate>Mon, 12 Nov 2018 13:38:49 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredtemplate/</guid>
      <description>This workflow allows you to create templates with Handlebar syntax. To use the workflow, you have to have Node.js installed first. I recommend using Homebrew to install it.
Once Node.js is installed, go to your snippets directory in Alfred Browser and select the Set Template Directory file action. This tells the workflow where your templates (or snippets) are to be kept.
You then run the tp:install to install the example templates and a default global.</description>
    </item>
    
    <item>
      <title>Dockshelf Workflow</title>
      <link>http://customct.com/projects/alfredp/alfreddockshelf/</link>
      <pubDate>Mon, 12 Nov 2018 12:55:54 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfreddockshelf/</guid>
      <description>This workflow is for automating the DockShelf program. The following items are defined:
Commands: ds:space
This command will show a list of workspaces currently defined. You can narrow the list by typing part of a name. Selecting one causes DockShelf to switch to that workspace.
External Triggers Focus Named Workspace
This external trigger will switch to the workspace given.</description>
    </item>
    
    <item>
      <title>Thai Translation Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredthai/</link>
      <pubDate>Mon, 12 Nov 2018 12:55:41 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredthai/</guid>
      <description>This workflow does web scraping on the http://www.thai-language.com/ site to translate words from english to thai/thai to english. It does an exact match first. If the exact match fails, then it does an inexact match. Consequently, the results do not always produce what you would expect all the time.
Remember to set the result count with “tt:setcount”!
tt:engthai Translate an English word to Thai.
tt:thaieng Translate a Thai word to English.</description>
    </item>
    
    <item>
      <title>Quiver Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredquiver/</link>
      <pubDate>Mon, 12 Nov 2018 12:55:32 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredquiver/</guid>
      <description>This workflow allows you to create templates with Handlebar syntax inside of the Quiver program. To use the workflow, you have to have Node.js installed first. I recommend using Homebrew to install it.
Once Node.js is installed, go to your Quiver Library file in Alfred Browser and select the “Set Quiver Library” file action. This tells the workflow where your templates (or snippets) are to be kept. Create a workbook called “Snippets” with one note called Defaults.</description>
    </item>
    
    <item>
      <title>Time Adding Workflow</title>
      <link>http://customct.com/projects/alfredp/alfredaddtime/</link>
      <pubDate>Mon, 12 Nov 2018 12:49:57 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfredp/alfredaddtime/</guid>
      <description>I am often needing to add up a series to times in a document. This workflow makes it very easy. Clear the accumulator, select a time value, and hit your hotkey combination you assigned in this workflow. The time will be accumulated. You can show the time in Hr:min:sec format or just plain minutes. Have fun!
   Command Description     ta:clear This clears the accumulator   ta:showmin Show the accumulated time in just minutes.</description>
    </item>
    
    <item>
      <title>Alfred Workflows</title>
      <link>http://customct.com/projects/alfred/</link>
      <pubDate>Thu, 08 Nov 2018 19:14:45 +0000</pubDate>
      
      <guid>http://customct.com/projects/alfred/</guid>
      <description>Alfred is a great companion working on the Mac. It helps me in all of my chores and tasks. I currently average 180+ usages a day with Alfred with my top level of usage at 768 times in one day! Much of that is due to the workflows I have made to help me do my work. Remember, you have to have the right tool for the right job.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://customct.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://customct.com/about/</guid>
      <description>About Us Custom Computer Tools is a website owned and ran by Richard Guay, missionary in Thailand. Before I trusted in the Lord Jesus Christ to save me from my sins, I was an Electrical Engineer and Programmer by trade. You can read my testimony of salvation and my resume. I still love to program and have kept up with the times somewhat.
Since then, the hard economic times and various reasons, our support is no longer sufficient for all of our medical and educational needs.</description>
    </item>
    
  </channel>
</rss>